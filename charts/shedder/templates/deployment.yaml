apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shedder.fullname" . }}
  labels:
    {{- include "shedder.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "shedder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "shedder.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "shedder.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: cronjob
          image: alpine
          args:
          - /bin/sh
          - -c
          - apk update && apk add curl && a=`hostname -i | sed 's/ //g'` && while true; do curl http://$a:3004/api/shed/healthchecks; sleep 3; done
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: redisHost
              value: "{{.Values.env.redisHost}}"
            - name: redisPort
              value: "{{.Values.env.redisPort}}"
            - name: serviceType
              value: "{{.Values.env.serviceType}}"
            - name: servicePort
              value: "{{.Values.env.servicePort}} "
            - name: serviceHost
              value: "{{.Values.env.serviceHost}}"
            - name: labelSelector
              value: "{{.Values.env.labelSelector}}"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: redisPassword
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "apt-get update && apt-get -y install curl && a=`hostname -I | sed 's/ //g'` && curl http://$a:3004/api/shed/createpodslist"]
          ports:
            - name: http
              containerPort: {{.Values.image.containerPort}}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
